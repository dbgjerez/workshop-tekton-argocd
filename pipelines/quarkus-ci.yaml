apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: quarkus-ci
spec:
  workspaces:
    - name: source
    - name: scratch
    - name: git-credentials
  params:
    - name: repo-url
      description: Git repository url
    - name: revision
      description: Revision to use
    - name: src
      description: Source code folder
    - name: image-name
      description: Name of the image result
    - name: container-file
      description: container runtime file
    - name: skip-image-push
      description: Skip image push
    - name: service-name
      description: Service name
  tasks:
  - name: clone
    taskRef:
      name: git-clone
      kind: ClusterTask
      apiVersion: tekton.dev/v1beta1
    params:
      - name: url
        value: $(params.repo-url)
      - name: revision
        value: $(params.revision)
      - name: src
        value: $(params.src)
      - name: deleteExisting
        value: 'true'
      - name: sslVerify
        value: 'false'
    workspaces:
      - name: output
        workspace: source
      - name: basic-auth
        workspace: git-credentials

  - name: test
    taskRef:
      name: maven
      kind: ClusterTask
      apiVersion: tekton.dev/v1beta1
    runAfter:
      - clone
    params:
      - name: MAVEN_IMAGE
        value: 'maven:3-openjdk-17'
      - name: GOALS
        value: ['clean', 'verify']
      - name: CONTEXT_DIR
        value: $(params.src)
    workspaces:
      - name: source
        workspace: source
      - name: maven-settings
        workspace: scratch

  - name: extract-app-version
    taskRef:
      name: extract-version-pom
      apiVersion: tekton.dev/v1beta1
    runAfter:
      - clone
    params:
      - name: context
        value: $(params.src)
    workspaces:
      - name: source
        workspace: source

  - name: update-mvn-version
    taskRef:
      name: maven
      kind: ClusterTask
      apiVersion: tekton.dev/v1beta1
    runAfter:
      - extract-app-version
    params:
      - name: MAVEN_IMAGE
        value: 'maven:3-openjdk-17'
      - name: CONTEXT_DIR
        value: $(params.src)
      - name: GOALS
        value: 
          - versions:set
          - -DnewVersion=$(tasks.extract-app-version.results.app-version)
    workspaces:
      - name: source
        workspace: source
      - name: maven-settings
        workspace: scratch

  - name: build
    taskRef:
      name: maven
      kind: ClusterTask
      apiVersion: tekton.dev/v1beta1
    runAfter:
      - update-mvn-version
      - test
    params:
      - name: MAVEN_IMAGE
        value: 'maven:3-openjdk-17'
      - name: CONTEXT_DIR
        value: $(params.src)
      - name: GOALS
        value: ['clean', 'package', '-DskipTests']
    workspaces:
      - name: source
        workspace: source
      - name: maven-settings
        workspace: scratch
         
  - name: build-image
    taskRef:
      name: buildah
      kind: ClusterTask
      apiVersion: tekton.dev/v1beta1
    runAfter:
      - build
    params:
      - name: IMAGE
        value: $(params.image-name):$(tasks.extract-app-version.results.app-version)
      - name: DOCKERFILE
        value: $(params.container-file)
      - name: SKIP_PUSH
        value: $(params.skip-image-push)
      - name: CONTEXT
        value: $(params.src)
      - name: TLSVERIFY
        value: "false"
      - name: BUILD_EXTRA_ARGS
        value: "--build-arg version=$(tasks.extract-app-version.results.app-version) \
                --build-arg serviceName=$(params.service-name)"
    workspaces:
      - name: source
        workspace: source

  - name: update-deploy-dev
    taskRef:
      name: git-cli
      kind: ClusterTask
      apiVersion: tekton.dev/v1beta1
    runAfter:
      - build-image
    params:
      - name: GIT_USER_NAME
        value: gogs
      - name: GIT_USER_EMAIL
        value: dborrego@redhat.com
      - name: GIT_SCRIPT
        value: |
          git clone http://gogs.gogs.svc.cluster.local:3000/gogs/app-quarkus-config.git app-quarkus-config-dev
          cd app-quarkus-config-dev
          sed -i "s/version:.*/version: $(tasks.extract-app-version.results.app-version)/g" dev.values.yaml
          git add dev.values.yaml
          git commit -m bot-update
          git push
    workspaces:
      - name: source
        workspace: source
      - name: basic-auth
        workspace: git-credentials

  - name: update-deploy-int
    taskRef:
      name: git-cli
      kind: ClusterTask
      apiVersion: tekton.dev/v1beta1
    runAfter:
      - build-image
    params:
      - name: GIT_USER_NAME
        value: gogs
      - name: GIT_USER_EMAIL
        value: dborrego@redhat.com
      - name: GIT_SCRIPT
        value: |
          sleep 5
          git clone http://gogs.gogs.svc.cluster.local:3000/gogs/app-quarkus-config.git app-quarkus-config-int
          cd app-quarkus-config-int
          sed -i "s/version:.*/version: $(tasks.extract-app-version.results.app-version)/g" int.values.yaml
          git add int.values.yaml
          git commit -m bot-update
          git push
    workspaces:
      - name: source
        workspace: source
      - name: basic-auth
        workspace: git-credentials

  - name: update-deploy-prod
    taskRef:
      name: git-cli
      kind: ClusterTask
      apiVersion: tekton.dev/v1beta1
    runAfter:
      - build-image
    params:
      - name: GIT_USER_NAME
        value: gogs
      - name: GIT_USER_EMAIL
        value: dborrego@redhat.com
      - name: GIT_SCRIPT
        value: |
          sleep 10
          git clone http://gogs.gogs.svc.cluster.local:3000/gogs/app-quarkus-config.git app-quarkus-config-prod
          cd app-quarkus-config-prod
          sed -i "s/version:.*/version: $(tasks.extract-app-version.results.app-version)/g" prod.values.yaml
          git add prod.values.yaml
          git commit -m bot-update
          git push
    workspaces:
      - name: source
        workspace: source
      - name: basic-auth
        workspace: git-credentials